name: CI

on:
  push:
    branches:
      - main
    tags:
      - v*
  pull_request:
    branches:
      - "**"
  schedule:
    # Daily at 05:14
    - cron: '14 5 * * *'

jobs:
  test:
    # Should match JOB_NAME below
    name: ${{ matrix.task.name }} - ${{ matrix.os.name }} ${{ matrix.python.name }} ${{ matrix.arch.name }}
    runs-on: ${{ matrix.os.runs-on }}
    container: ${{ matrix.os.container[matrix.python.docker] }}
    strategy:
      fail-fast: false
      matrix:
        task:
          - name: Test
            tox: test
            coverage: true
        os:
          - name: Linux
            runs-on: ubuntu-latest
            python_platform: linux
            matrix: linux
            container:
              2.7: docker://python:2.7-buster
              3.5: docker://python:3.5-buster
              3.6: docker://python:3.6-buster
              3.7: docker://python:3.7-buster
              3.8: docker://python:3.8-buster
              3.9: docker://python:3.9-buster
              pypy2: docker://pypy:2-jessie
              pypy3.6: docker://pypy:3.6-buster
              pypy3.7: docker://pypy:3.7-buster
          - name: Windows
            runs-on: windows-latest
            python_platform: win32
            matrix: windows
          - name: macOS
            runs-on: macos-latest
            python_platform: darwin
            matrix: macos
        python:
          - name: CPython 3.6
            tox: py36
            action: 3.6
            docker: 3.6
          - name: CPython 3.7
            tox: py37
            action: 3.7
            docker: 3.7
          - name: CPython 3.8
            tox: py38
            action: 3.8
            docker: 3.8
          - name: CPython 3.9
            tox: py39
            action: 3.9
            docker: 3.9
          - name: PyPy 3.6
            tox: pypy36
            action: pypy-3.6
            docker: pypy3.6
          - name: PyPy 3.7
            tox: pypy37
            action: pypy-3.7
            docker: pypy3.7
        arch:
          - name: x86
            action: x86
            matrix: x86
          - name: x64
            action: x64
            matrix: x64
        exclude:
          - os:
              matrix: linux
            arch:
              matrix: x86
          - os:
              matrix: macos
            arch:
              matrix: x86
    env:
      # Should match name above
      JOB_NAME: ${{ matrix.task.name }} - ${{ matrix.os.name }} ${{ matrix.python.name }} ${{ matrix.arch.name }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up ${{ matrix.python.name }}
        if: job.container == ''
        uses: actions/setup-python@v2
        with:
          # This allows the matrix to specify just the major.minor version while still
          # expanding it to get the latest patch version including alpha releases.
          # This avoids the need to update for each new alpha, beta, release candidate,
          # and then finally an actual release version.  actions/setup-python doesn't
          # support this for PyPy presently so we get no help there.
          #
          # CPython -> 3.9.0-alpha - 3.9.X
          # PyPy    -> pypy-3.7
          python-version: ${{ fromJSON(format('["{0}", "{1}"]', format('{0}.0-alpha - {0}.X', matrix.python.action), matrix.python.action))[startsWith(matrix.python.action, 'pypy')] }}
          architecture: '${{ matrix.arch.action }}'
      - name: Install tox
        run: |
          pip install --upgrade pip setuptools wheel
          pip install --upgrade tox
      - uses: twisted/python-info-action@v1.0.1
      - name: Setup tox environment
        run: |
          tox -vv --notest -e ${{ matrix.task.tox }}-${{ matrix.python.tox }}
      - name: Test
        run: |
          tox -e ${{ matrix.task.tox }}-${{ matrix.python.tox }}
      - name: Coverage Processing
        if: matrix.task.coverage
        run: |
          mkdir coverage_reports
          cp .coverage "coverage_reports/coverage.${{ env.JOB_NAME }}"
          cp coverage.xml "coverage_reports/coverage.${{ env.JOB_NAME }}.xml"
      - name: Codecov Upload
        if: ${{ matrix.task.coverage && github.event_name != 'schedule' }}
        run: |
          tox -v -e codecov
      - name: Publish Coverage
        if: matrix.task.coverage
        uses: actions/upload-artifact@v2
        with:
          name: coverage
          path: coverage_reports/*
  check:
    name: ${{ matrix.task.name }}
    runs-on: ${{ matrix.os.runs-on }}
    container: ${{ matrix.os.container[matrix.python.docker] }}
    strategy:
      fail-fast: false
      matrix:
        task:
          - name: Black
            tox: black
            coverage: false
          - name: Mypy
            tox: mypy
            coverage: false
        os:
          - name: Linux
            runs-on: ubuntu-latest
            python_platform: linux
            container:
              3.8: docker://python:3.8-buster
        python:
          - name: CPython 3.8
            tox: py38
            action: 3.8
            docker: 3.8
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Install tox
        run: |
          pip install --upgrade pip setuptools wheel
          pip install --upgrade tox
      - uses: twisted/python-info-action@v1.0.1
      - name: Setup tox environment
        run: |
          tox -vv --notest -e ${{ matrix.task.tox }}
      - name: Test
        run: |
          tox -e ${{ matrix.task.tox }}

  all:
    name: All
    runs-on: ubuntu-latest
    needs:
      - test
      - check
    steps:
      - name: This
        shell: python
        run: |
          import this
