[tox]
envlist =
    test-py{36,37,38,39,py36,py37}
    black
    mypy-py{36,37,38,39,py36,py37}
minversion = 3.20.1
requires =
    virtualenv ~=20.2

[python_info]
commands =
    python -m pip freeze --all

# Presently to get an updated pip with tox you must specify all of:
#       download = true
#       VIRTUALENV_PIP = whatever
#       VIRTUALENV_DOWNLOAD = true
# https://github.com/tox-dev/tox/issues/1768

[backtracking]
install_command =
    # This can help avoid backtracking while still allowing setup.cfg
    # to describe the acceptable version range.
    python -m pip install {opts} {packages} --constraint {toxinidir}/constraints/test.txt
setenv =
    VIRTUALENV_PIP = 21.0.1
    VIRTUALENV_DOWNLOAD = true

[testenv:test-py{36,37,38,39,py36,py37}]
download = true
extras =
    test
install_command =
    {[backtracking]install_command}
setenv =
    {[backtracking]setenv}
commands =
    {[python_info]commands}
    pytest --verbosity=1 --cov=sundog {posargs:--pyargs sundog}
    coverage xml

[testenv:black]
basepython = python3.8
extras =
    check
setenv =
    {[backtracking]setenv}
# TODO: would be nice to install extras but not package...
#skip_install = true
commands =
    {[python_info]commands}
    black --config {toxinidir}/pyproject.toml --check --diff {toxinidir}

[testenv:format]
basepython = python3.8
extras =
    check
setenv =
    {[backtracking]setenv}
# TODO: would be nice to install extras but not package...
#skip_install = true
commands =
    {[python_info]commands}
    black --config {toxinidir}/pyproject.toml {toxinidir}

[testenv:mypy-py{36,37,38,39,py36,py37}]
extras =
    check
setenv =
    {[backtracking]setenv}
# Mypy looks at the source and the .ui files are built into the paths the projct
# is being run from.  To get them to agree we use a develop/--editable install.
usedevelop = true
commands =
    {[python_info]commands}
    mypy --package sundog --show-error-codes

[testenv:codecov]
allowlist_externals =
    bash
    curl
passenv =
    CI
    GITHUB_*
commands =
    curl --output codecov.sh https://codecov.io/bash
    bash codecov.sh -Z -n "{env:JOB_NAME:unspecified}" -f 'coverage.xml'
